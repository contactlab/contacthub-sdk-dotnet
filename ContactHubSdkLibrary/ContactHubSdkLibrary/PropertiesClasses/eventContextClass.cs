/* autogenerated from version 0.0.0.1 04/10/2016 18:39:36 */

using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using ContactHubSdkLibrary.Events;
using ContactHubSdkLibrary;
namespace ContactHubSdkLibrary.Events {
//context class 'WEB': Events made in web context
public class EventContextPropertyWEB: EventBaseProperty
{
    public Client client {get;set;}
}


public class Client
{
    public string userAgent {get;set;}
    //format: ipv4-cidr
    public string ip {get;set;}
}


//context class 'MOBILE': Events made in mobile context
public class EventContextPropertyMOBILE: EventBaseProperty
{
}


//context class 'ECOMMERCE': Events made in e-commerce context
public class EventContextPropertyECOMMERCE: EventBaseProperty
{
    public Client client {get;set;}
    public Store store {get;set;}
}


public class Store
{
    public string id {get;set;}
    public string name {get;set;}
[JsonProperty("type")]public string _type {get;set;}
[JsonProperty("hidden_type")][JsonIgnore]
                    public StoreTypeEnum type 
            {
                get
                {
                        StoreTypeEnum enumValue =ContactHubSdkLibrary.EnumHelper<StoreTypeEnum>.GetValueFromDisplayName(_type);
                        return enumValue;
                }
                set
                {
                        var displayValue = ContactHubSdkLibrary.EnumHelper<StoreTypeEnum>.GetDisplayValue(value);
                        _type = (displayValue=="NoValue"? null : displayValue);
                }
            }
                public string street {get;set;}
    public string city {get;set;}
    public string country {get;set;}
    public string province {get;set;}
    public string zip {get;set;}
    public Geo geo {get;set;}
    public string website {get;set;}
}

public enum StoreTypeEnum {
	NoValue,
	[Display(Name="AIRPORT")]
	AIRPORT,
	[Display(Name="ECOMMERCE")]
	ECOMMERCE,
	[Display(Name="FLAGSHIP")]
	FLAGSHIP,
	[Display(Name="FREE-STANDING")]
	FREEMinusSTANDING,
	[Display(Name="MALL")]
	MALL,
	[Display(Name="OUTLET")]
	OUTLET,
	[Display(Name="RESORT")]
	RESORT,
	[Display(Name="SIS")]
	SIS,
	[Display(Name="WAREHOUSE")]
	WAREHOUSE,
	[Display(Name="NOT-DEFINED")]
	NOTMinusDEFINED
}
//context class 'RETAIL': Events made in store context
public class EventContextPropertyRETAIL: EventBaseProperty
{
    public Client client {get;set;}
    public Store store {get;set;}
}


//context class 'SOCIAL': Events made in social network context
public class EventContextPropertySOCIAL: EventBaseProperty
{
}


//context class 'DIGITAL_CAMPAIGN': Events made in digital message context, like email marketing, sms, push, etc.
public class EventContextPropertyDIGITAL_CAMPAIGN: EventBaseProperty
{
}


//context class 'CONTACT_CENTER': Events made in contact center context.
public class EventContextPropertyCONTACT_CENTER: EventBaseProperty
{
}


//context class 'OTHER': Events made in other context
public class EventContextPropertyOTHER: EventBaseProperty
{
}



}
public enum EventContextEnum {
	NoValue,
	[Display(Name="WEB")]
	WEB,
	[Display(Name="MOBILE")]
	MOBILE,
	[Display(Name="ECOMMERCE")]
	ECOMMERCE,
	[Display(Name="RETAIL")]
	RETAIL,
	[Display(Name="SOCIAL")]
	SOCIAL,
	[Display(Name="DIGITAL_CAMPAIGN")]
	DIGITALCAMPAIGN,
	[Display(Name="CONTACT_CENTER")]
	CONTACTCENTER,
	[Display(Name="OTHER")]
	OTHER
}